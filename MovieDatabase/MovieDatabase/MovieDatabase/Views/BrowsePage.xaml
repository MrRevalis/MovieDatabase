<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:vm="clr-namespace:MovieDatabase.ViewModels"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             xmlns:cu="clr-namespace:MovieDatabase.CustomControls"
             xmlns:cv="clr-namespace:MovieDatabase.Converters"
             x:Name="browsePage"
             x:Class="MovieDatabase.Views.BrowsePage">

    <ContentPage.BindingContext>
        <vm:BrowseViewModel/>
    </ContentPage.BindingContext>

    <ContentPage.Behaviors>
        <xct:EventToCommandBehavior
            EventName="Appearing"
            Command="{Binding AppearingCommand}"/>
    </ContentPage.Behaviors>
    
    <ContentPage.Padding>
        <OnPlatform
            x:TypeArguments="Thickness">
            <OnPlatform.iOS>0, 20, 0, 0</OnPlatform.iOS>
            <OnPlatform.Android>0, 0, 0, 0</OnPlatform.Android>
        </OnPlatform>
    </ContentPage.Padding>

    <ContentPage.Resources>
        <cv:ImageSourceConverter x:Key="ImageSourceConverter"/>
    </ContentPage.Resources>

    <Shell.TitleView>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <cu:ClosingSearchBar 
                Grid.Column="0" 
                x:Name="searchBar"
                ShouldClosed="{Binding SearchBarVisible, Mode=TwoWay}" 
                IsVisible="{Binding SearchBarVisible, Mode=TwoWay}"
                SearchCommand="{Binding FilterResultsCommand}"
                SearchCommandParameter="{Binding Text, Source={x:Reference searchBar}}">
                <cu:ClosingSearchBar.Behaviors>
                    <xct:UserStoppedTypingBehavior
                        Command="{Binding FilterResultsCommand}"
                        StoppedTypingTimeThreshold="1000"
                        MinimumLengthThreshold="2"
                        ShouldDismissKeyboardAutomatically="True"/>
                </cu:ClosingSearchBar.Behaviors>
            </cu:ClosingSearchBar>
            <Label Grid.Column="0" Text="Browse" FontSize="Medium" FontAttributes="Bold" TextColor="White" VerticalTextAlignment="Center" HorizontalTextAlignment="Start">
                <Label.Triggers>
                    <DataTrigger
                        TargetType="Label"
                        Binding="{Binding SearchBarVisible}"
                        Value="True">
                        <Setter Property="IsVisible" Value="False"/>
                    </DataTrigger>
                </Label.Triggers>
            </Label>
            <ImageButton Grid.Column="1" Source="ic_action_search.png" Scale="0.85" BackgroundColor="Transparent" Command="{Binding ShowSearchBarCommand}">
                <ImageButton.Triggers>
                    <DataTrigger
                        TargetType="ImageButton"
                        Binding="{Binding SearchBarVisible}"
                        Value="True">
                        <Setter Property="IsVisible" Value="False"/>
                    </DataTrigger>
                </ImageButton.Triggers>
            </ImageButton>
            <ImageButton Grid.Column="2" Source="ic_action_logout.png" Scale="0.85" BackgroundColor="Transparent" Command="{Binding SignOutCommand}"/>
        </Grid>
    </Shell.TitleView>

    <xct:TabView
        TabIndicatorPlacement="Bottom"
        TabIndicatorColor="{StaticResource green}"
        TabStripPlacement="Top"
        IsSwipeEnabled="True"
        SelectedIndex="0">

        <xct:TabViewItem
            Text="Watchlist"
            TextColor="#A9A9A9"
            TextColorSelected="{AppThemeBinding Dark={StaticResource textDark}, Light={StaticResource textLight}}">
            <Grid
                Margin="10">
                <CollectionView
                    ItemSizingStrategy="MeasureAllItems"
                    ItemsSource="{Binding FavouriteItems}">
                    <CollectionView.ItemsLayout>
                        <GridItemsLayout
                            Orientation="Vertical"
                            VerticalItemSpacing="20"
                            Span="{Binding Source={x:Reference browsePage}, Path=BindingContext.ItemSpan}"/>
                    </CollectionView.ItemsLayout>

                    
                    <CollectionView.EmptyView>
                        <Grid>
                            <Label
                                Text="Empty list"
                                FontSize="Large"
                                FontAttributes="Bold"
                                VerticalOptions="Center"
                                HorizontalOptions="Center"/>
                        </Grid>
                    </CollectionView.EmptyView>
                    
                    <CollectionView.ItemTemplate>
                        <DataTemplate>
                            <Frame
                                Padding="0"
                                BackgroundColor="{AppThemeBinding Dark={StaticResource lightBlue}, Light={StaticResource lightGray}}"
                                CornerRadius="20">
                                <Grid
                                    RowSpacing="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="160"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="80*"/>
                                        <ColumnDefinition Width="10*"/>
                                        <ColumnDefinition Width="10*"/>
                                    </Grid.ColumnDefinitions>
                                    <Image
                                        Grid.Row="0"
                                        Grid.ColumnSpan="3"
                                        Source="{Binding Image, Converter={StaticResource ImageSourceConverter}}"
                                        Aspect="AspectFill"/>
                                    <Label
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Text="{Binding Title}"
                                        FontSize="Medium"
                                        FontAttributes="Bold"
                                        Margin="5, 3"
                                        VerticalTextAlignment="Center"/>
                                    <ImageButton
                                        Source="{AppThemeBinding Dark=ic_action_favorite_blank.png, Light=ic_action_favorite_border.png}"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        BackgroundColor="{AppThemeBinding Dark={StaticResource lightBlue}, Light={StaticResource lightGray}}"
                                        HeightRequest="64"
                                        WidthRequest="64"
                                        Command="{Binding AddFavouriteCommand, Source={RelativeSource AncestorType={x:Type vm:BrowseViewModel}}}"
                                        CommandParameter="{Binding .}">
                                        <ImageButton.Triggers>
                                            <DataTrigger
                                                TargetType="ImageButton"
                                                Binding="{Binding ToWatch}"
                                                Value="True">
                                                <Setter Property="Source" Value="ic_action_favorite.png"/>
                                            </DataTrigger>
                                        </ImageButton.Triggers>
                                    </ImageButton>
                                    <ImageButton
                                        Source="{AppThemeBinding Dark=ic_action_check_box_outline_blank.png, Light=ic_action_check_box_outline_border.png}"
                                        Grid.Row="1"
                                        Grid.Column="2"
                                        BackgroundColor="{AppThemeBinding Dark={StaticResource lightBlue}, Light={StaticResource lightGray}}"
                                        HeightRequest="64"
                                        WidthRequest="64"
                                        Command="{Binding AddRealisedCommand, Source={RelativeSource AncestorType={x:Type vm:BrowseViewModel}}}"
                                        CommandParameter="{Binding .}">
                                        <ImageButton.Triggers>
                                            <DataTrigger
                                                TargetType="ImageButton"
                                                Binding="{Binding Watched}"
                                                Value="True">
                                                <Setter Property="Source" Value="ic_action_check_box.png"/>
                                            </DataTrigger>
                                        </ImageButton.Triggers>
                                    </ImageButton>
                                </Grid>
                                <Frame.GestureRecognizers>
                                    <TapGestureRecognizer
                                        Command="{Binding ChangePageCommand, Source={RelativeSource AncestorType={x:Type vm:BrowseViewModel}}}"
                                        CommandParameter="{Binding .}"/>
                                </Frame.GestureRecognizers>
                            </Frame>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
                <cu:LoadingScreen ShouldWork="{Binding IsBusy}"/>
            </Grid>
        </xct:TabViewItem>

        <xct:TabViewItem 
            Text="Watched"
            TextColor="#A9A9A9"
            TextColorSelected="{AppThemeBinding Dark={StaticResource textDark}, Light={StaticResource textLight}}">
            <Grid 
                Margin="10">
                <CollectionView
                    ItemSizingStrategy="MeasureAllItems"
                    ItemsSource="{Binding RealisedItems}">
                    <CollectionView.ItemsLayout>
                        <GridItemsLayout
                            Orientation="Vertical"
                            VerticalItemSpacing="20"
                            Span="{Binding Source={x:Reference browsePage}, Path=BindingContext.ItemSpan}"/>
                    </CollectionView.ItemsLayout>
                    <CollectionView.EmptyView>
                        <Grid>
                            <Label
                                Text="Empty list"
                                FontSize="Large"
                                FontAttributes="Bold"
                                VerticalOptions="Center"
                                HorizontalOptions="Center"/>
                        </Grid>
                    </CollectionView.EmptyView>
                    <CollectionView.ItemTemplate>
                        <DataTemplate>
                            <Frame
                                Padding="0"
                                BackgroundColor="{AppThemeBinding Dark={StaticResource lightBlue}, Light={StaticResource lightGray}}"
                                CornerRadius="20">
                                <Grid
                                    RowSpacing="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="160"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="80*"/>
                                        <ColumnDefinition Width="10*"/>
                                        <ColumnDefinition Width="10*"/>
                                    </Grid.ColumnDefinitions>
                                    <Image
                                        Grid.Row="0"
                                        Grid.ColumnSpan="3"
                                        Source="{Binding Image, Converter={StaticResource ImageSourceConverter}}"
                                        Aspect="AspectFill"/>
                                    <Label
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Text="{Binding Title}"
                                        FontSize="Medium"
                                        FontAttributes="Bold"
                                        Margin="5, 3"
                                        VerticalTextAlignment="Center"/>
                                    <ImageButton
                                        Source="{AppThemeBinding Dark=ic_action_favorite_blank.png, Light=ic_action_favorite_border.png}"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        BackgroundColor="{AppThemeBinding Dark={StaticResource lightBlue}, Light={StaticResource lightGray}}"
                                        HeightRequest="64"
                                        WidthRequest="64"
                                        Command="{Binding AddFavouriteCommand, Source={RelativeSource AncestorType={x:Type vm:BrowseViewModel}}}"
                                        CommandParameter="{Binding .}">
                                        <ImageButton.Triggers>
                                            <DataTrigger
                                                TargetType="ImageButton"
                                                Binding="{Binding ToWatch}"
                                                Value="True">
                                                <Setter Property="Source" Value="ic_action_favorite.png"/>
                                            </DataTrigger>
                                        </ImageButton.Triggers>
                                    </ImageButton>
                                    <ImageButton
                                        Source="{AppThemeBinding Dark=ic_action_check_box_outline_blank.png, Light=ic_action_check_box_outline_border.png}"
                                        Grid.Row="1"
                                        Grid.Column="2"
                                        BackgroundColor="{AppThemeBinding Dark={StaticResource lightBlue}, Light={StaticResource lightGray}}"
                                        HeightRequest="64"
                                        WidthRequest="64"
                                        Command="{Binding AddRealisedCommand, Source={RelativeSource AncestorType={x:Type vm:BrowseViewModel}}}"
                                        CommandParameter="{Binding .}">
                                        <ImageButton.Triggers>
                                            <DataTrigger
                                                TargetType="ImageButton"
                                                Binding="{Binding Watched}"
                                                Value="True">
                                                <Setter Property="Source" Value="ic_action_check_box.png"/>
                                            </DataTrigger>
                                        </ImageButton.Triggers>
                                    </ImageButton>
                                </Grid>
                                <Frame.GestureRecognizers>
                                    <TapGestureRecognizer
                                        Command="{Binding ChangePageCommand, Source={RelativeSource AncestorType={x:Type vm:BrowseViewModel}}}"
                                        CommandParameter="{Binding .}"/>
                                </Frame.GestureRecognizers>
                            </Frame>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
                <cu:LoadingScreen ShouldWork="{Binding IsBusy}"/>
            </Grid>
        </xct:TabViewItem>
    </xct:TabView>
</ContentPage>